#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('web:server');
var http = require('http');
var {set_port} = require("../config");

/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(set_port==""?'13145':set_port);

app.set('port', port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  const {console_color} = require("../config.js");
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
  console.log(console_color.red,String.raw` __  __       _         _        ` , console_color.blue, String.raw`   _____                _     _       ` , console_color.green, String.raw` __          ___     _ `);
  console.log(console_color.red,String.raw`|  \/  |     | |       | |       ` , console_color.blue, String.raw`  / ____|              | |   (_)      ` , console_color.green, String.raw` \ \        / (_)   | | `);
  console.log(console_color.red,String.raw`| \  / | __ _| | _____ | |_ ___  ` , console_color.blue, String.raw` | |  __  ___ _ __  ___| |__  _ _ __  ` , console_color.green, String.raw`  \ \  /\  / / _ ___| |__ `);
  console.log(console_color.red,String.raw`| |\/| |/ _\ | |/ / _ \| __/ _ \ ` , console_color.blue, String.raw` | | |_ |/ _ \ '_ \/ __| '_ \| | '_ \ ` , console_color.green, String.raw`   \ \/  \/ / | / __| '_ \ `);
  console.log(console_color.red,String.raw`| |  | | (_| |   < (_) | || (_) |` , console_color.blue, String.raw` | |__| |  __/ | | \__ \ | | | | | | |` , console_color.green, String.raw`    \  /\  /  | \__ \ | | |`);
  console.log(console_color.red,String.raw`|_|  |_|\__,_|_|\_\___/ \__\___/ ` , console_color.blue, String.raw`  \_____|\___|_| |_|___/_| |_|_|_| |_|` , console_color.green, String.raw`     \/  \/   |_|___/_| |_|`, console_color.white);
  console.log(console_color.white,"\nWelcome to the Genshin Impact Command Server Prayer Statistics System!");
  console.log("Server is running http://127.0.0.1:"+port);
}
